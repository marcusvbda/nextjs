{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\wamp64\\\\www\\\\nextjs\\\\pages\\\\posts\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var repositories = _ref.repositories;\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(0),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  useEffect(function () {\n    console.log(\"first\", repositories);\n  }, []);\n  useEffect(function () {\n    console.log(\"counter alterado\");\n  }, [counter]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Posts : \", id), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 34\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setCounter(counter + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Counter : \", counter), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 89\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }\n  }, \"Home\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 46\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, repositories.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, repo.name);\n  })));\n};\n\n_s(Post, \"rj1AXtvhWX8UxUWbxSPcwb5qm5A=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nPost.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, repositories;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          repositories = _context.sent;\n          return _context.abrupt(\"return\", {\n            repositories: repositories\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/wamp64/www/nextjs/pages/posts/[id].js"],"names":["React","Link","useRouter","useEffect","useState","Post","repositories","router","id","query","counter","setCounter","console","log","map","repo","name","getInitialProps","fetch","response","json"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA;;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC/B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAD+B,MAEvBM,EAFuB,GAEhBD,MAAM,CAACE,KAFS,CAEvBD,EAFuB;;AAAA,kBAGDJ,QAAQ,CAAC,CAAD,CAHP;AAAA,MAGxBM,OAHwB;AAAA,MAGfC,UAHe;;AAK/BR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,YAArB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaF,EAAb,CADJ,EACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2DA,OAA3D,CAFJ,EAEgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhF,EAGI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf,CAHJ,EAGqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHrC,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,CAACQ,GAAb,CAAiB,UAAAC,IAAI;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBO,IAAI,CAACC,IAAxB,CADkB;AAAA,GAArB,CADL,CAJJ,CADJ;AAYH,CAzBD;;GAAMX,I;UACaH,S;;;KADbG,I;AA2BNA,IAAI,CAACY,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACIC,KAAK,CAAC,8CAAD,CADT;;AAAA;AACbC,UAAAA,QADa;AAAA;AAAA,iBAEQA,QAAQ,CAACC,IAAT,EAFR;;AAAA;AAEbd,UAAAA,YAFa;AAAA,2CAGZ;AAAEA,YAAAA,YAAY,EAAZA;AAAF,WAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAMA,eAAeD,IAAf","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Post = ({ repositories }) => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const [counter, setCounter] = useState(0)\r\n\r\n    useEffect(() => {\r\n        console.log(\"first\", repositories)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"counter alterado\")\r\n    }, [counter])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts : {id}</h1><br />\r\n            <button onClick={() => setCounter(counter + 1)}>Counter : {counter}</button><br />\r\n            <Link href=\"/\"><a>Home</a></Link><br />\r\n            <ul>\r\n                {repositories.map(repo => (\r\n                    <li key={repo.id}>{repo.name}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nPost.getInitialProps = async () => {\r\n    const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n    const repositories = await response.json()\r\n    return { repositories }\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}