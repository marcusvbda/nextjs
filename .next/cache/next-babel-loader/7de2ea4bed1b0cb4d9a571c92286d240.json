{"ast":null,"code":"var _jsxFileName = \"D:\\\\wamp64\\\\www\\\\nextjs\\\\contexts\\\\userContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState } from 'react';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n\n  const setUserName = username => setUser(_objectSpread(_objectSpread({}, user), {}, {\n    userName: username\n  }));\n\n  const logout = () => {\n    setUser({});\n  };\n\n  return __jsx(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["D:/wamp64/www/nextjs/contexts/userContext.js"],"names":["React","createContext","useState","UserContext","UserContextProvider","props","user","setUser","setUserName","username","userName","logout","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;;AAEP,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,WAAW,GAAGC,QAAQ,IAAIF,OAAO,iCAAMD,IAAN;AAAYI,IAAAA,QAAQ,EAAED;AAAtB,KAAvC;;AAEA,QAAME,MAAM,GAAG,MAAM;AACjBJ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAFD;;AAIA,SACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACO,QADX,CADJ;AAKH,CAdD;;AAeA,eAAeR,mBAAf","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const UserContext = createContext()\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [user, setUser] = useState({})\r\n\r\n    const setUserName = username => setUser({ ...user, userName: username })\r\n\r\n    const logout = () => {\r\n        setUser({})\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\nexport default UserContextProvider"]},"metadata":{},"sourceType":"module"}